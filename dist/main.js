(()=>{"use strict";var e={275:(e,t,r)=>{var s;Object.defineProperty(t,"__esModule",{value:!0}),t.NODE_ENV=t.PORT=void 0,r(81),s=process.env,t.PORT=s.PORT,t.NODE_ENV="production"},823:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{gameId;turnUserId;ships;indexPlayer;cell;previousAttacks;pseudoRandom;constructor(e,t,r,s,a,o=[]){this.gameId=e,this.turnUserId=t,this.ships=r,this.indexPlayer=s,this.pseudoRandom=a,this.previousAttacks=o}removePseudoRandom(e){this.pseudoRandom=this.pseudoRandom.filter((t=>t!==e))}}},824:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createCell=void 0,t.createCell=e=>{const t=new Map;let r=0;for(let e=0;e<10;e+=1){r=10*e;for(let e=0;e<10;e+=1)t.set(r+e,{status:"",isShip:!1,ship:{},attack:0})}for(let r=0;r<e.length;r+=1){const s=e[r];s.attack=0;let a=s.position.x,o=s.position.y,n=-1,d=-1;s.direction?(n=0,d=1):(n=1,d=0);for(let e=0;e<s.length;e+=1)t.set(10*a+o,{attack:0,status:"",isShip:!0,ship:s}),a+=n,o+=d}return t}},731:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});class r{static gameId=0;boards;init;gameId;turnUserId;constructor(e,t){this.boards=e,this.init=t,this.gameId=r.gameId,r.gameId+=1}}t.default=r},800:function(e,t,r){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.doAttack=t.getTurnUserId=t.setTurnUserId=t.startGame=t.getPlayerGameData=t.addShipsToGame=t.newGameUser=t.createGame=void 0;const a=r(361),o=s(r(823)),n=r(824),d=s(r(731)),u=new Map;t.createGame=()=>{const e=new d.default(new Map,0);return u.set(e.gameId,e),e.gameId},t.newGameUser=(e,t)=>{const r=u.get(e),s=new o.default(e,0,[],t,(()=>{const e=[];for(let t=0;t<10;t+=1)for(let r=0;r<10;r+=1)e.push(`${t},${r}`);return e})(),[]);return r?.boards.set(t,s),{idGame:e,idPlayer:t}},t.addShipsToGame=e=>{const{data:{gameId:t,indexPlayer:r,ships:s}}=e,a=u.get(t),o=a?.boards.get(r);return o&&a?(o.ships=s,a.init+=1,{init:a.init,data:{ships:o.ships,currentPlayerIndex:r}}):null},t.getPlayerGameData=(e,t)=>{const r=u.get(e),s={};for(const e of r.boards.values())e.indexPlayer!==t&&s&&(s.ships=e.ships,s.currentPlayerIndex=e.indexPlayer);return s},t.startGame=e=>{const t=u.get(e);for(const e of t.boards.values())e.cell=(0,n.createCell)(e.ships)},t.setTurnUserId=(e,t)=>{u.get(e).turnUserId=t},t.getTurnUserId=e=>u.get(e).turnUserId,t.doAttack=e=>{const{data:{gameId:t,indexPlayer:r,x:s,y:o}}=e,n=u.get(t);let d=s,i=o,l=!0,c=0,f={};for(const e of n.boards.values())e.indexPlayer!==r&&(c=e.indexPlayer,f=e);if(void 0===d||void 0===i){const e=(e=>{const t=Math.floor(Math.random()*e.pseudoRandom.length),r=e.pseudoRandom[t],[s,a]=r.split(",");return e.removePseudoRandom(r),{x:Number(s),y:Number(a)}})(f);d=e.x,i=e.y}const p=10*d+i,m=f.cell.get(p),h=[],_=f.previousAttacks.includes(`${d},${i}`);if(m.isShip&&!_){m.attack+=1;const e=m.ship;if(e.attack+=1,e.attack<e.length)m.status=a.AttackStatus.shot;else{m.status=a.AttackStatus.killed;let t=e.position.x-1,s=e.position.y-1,o=-1,n=-1;for(let d=0;d<3;d+=1){e.direction?(o=0,n=1):(o=1,n=0);for(let u=0;u<e.length+2;u+=1){if(t>=0&&t<=9&&s>=0&&s<=9&&(0===d||2===d)||t>=0&&t<=9&&s>=0&&s<=9&&1===d&&(0===u||u===e.length+1)){f.cell.set(10*t+s,{attack:1,status:a.AttackStatus.miss});const e={position:{x:t,y:s},currentPlayer:r,status:a.AttackStatus.miss};h.push(e)}else if(t>=0&&t<=9&&s>=0&&s<=9&&1===d&&(u>0||u<e.length+1)){f.cell.set(10*t+s,{attack:1,status:a.AttackStatus.killed});const e={position:{x:t,y:s},currentPlayer:r,status:a.AttackStatus.killed};h.push(e)}t+=o,s+=n}e.direction?(t+=1,s=e.position.y-1):(t=e.position.x-1,s+=1)}for(const e of f.cell.values())e.isShip&&""===e.status&&(l=!1)}}else m.attack+=1,m.status=a.AttackStatus.miss;return _||f.previousAttacks?.push(`${d},${i}`),{resData:{position:{x:d,y:i},currentPlayer:r,status:m.status},partnerId:c,aroundCells:h,finish:l}}},489:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});class r{static roomId=0;roomUsers;roomId;constructor(e){this.roomUsers=e,this.roomId=r.roomId,r.roomId+=1}}t.default=r},385:function(e,t,r){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.addPlayerToRoom=t.createRoom=t.updateRooms=void 0;const a=s(r(489)),o=r(882),n=[];t.updateRooms=()=>{let e=n.findIndex((e=>2===e.roomUsers.length));for(;e>=0;)n.splice(e,1),e=n.findIndex((e=>2===e.roomUsers.length));return n},t.createRoom=e=>{const t=o.users.get(e);var r;if(r=e,n.find((({roomUsers:e})=>e.find((e=>e.index===r)))))return process.stdout.write("Player can`t create more than 1 room\n"),n;if(t){const r=new a.default([{name:t.name,index:e}]);n.push(r)}return n},t.addPlayerToRoom=(e,t)=>{const r=o.users.get(t),s=[],a=n.filter((t=>t.roomId===e)),d=a[0]?.roomUsers[0]?.index;return r&&void 0!==d&&d!==t&&(s.push(d),s.push(t),a[0]?.roomUsers.push({name:r.name,index:t})),s}},802:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});class r{static userId=0;name;password;userId;constructor(e,t){this.name=e,this.password=t,this.userId=r.userId,r.userId+=1}}t.default=r},882:function(e,t,r){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.setWinner=t.playerAutorization=t.winners=t.users=void 0;const a=s(r(802));t.users=new Map,t.winners=[],t.playerAutorization=e=>{const{name:r,password:s}=e.data,o={name:r,index:-1,error:!1,errorText:""};try{let e;for(const s of t.users.values())s.name===r&&(e=s);if(e)e.password===s?o.index=e.userId:(o.errorText="User exist and password is wrong",o.error=!0);else{const e=new a.default(r,s);t.users.set(e.userId,e),t.winners.push({name:r,wins:0}),o.index=e.userId}return o}catch(e){return o.errorText=e instanceof Error?e.message:"Something was wromg!",o.error=!0,o}},t.setWinner=e=>{const r=t.users.get(e),s=t.winners.findIndex((e=>e.name===r?.name)),a=t.winners[s];if(a){const{name:e,wins:r}=a;t.winners[s]={name:e,wins:r+1},t.winners.sort(((e,t)=>t.wins-e.wins))}}},993:function(e,t,r){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.httpServer=void 0;const a=s(r(147)),o=r(685),n=s(r(17));t.httpServer=(0,o.createServer)(((e,t)=>{const r=n.default.resolve(n.default.dirname(""))+("/"===e.url?"/front/index.html":`/front${e.url}`);a.default.readFile(r,((e,r)=>{if(e)return t.writeHead(404),void t.end(JSON.stringify(e));t.writeHead(200),t.end(r)}))})),t.default=t.httpServer},408:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.reg="reg",e.create_game="create_game",e.start_game="start_game",e.turn="turn",e.attack="attack",e.finish="finish",e.update_room="update_room",e.update_winners="update_winners",e.create_room="create_room",e.add_user_to_room="add_user_to_room",e.add_ships="add_ships",e.randomAttack="randomAttack"}(r||(r={})),t.default=r},361:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.AttackStatus=void 0,function(e){e.miss="miss",e.killed="killed",e.shot="shot"}(r||(t.AttackStatus=r={}))},755:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=e=>{const{data:t,...r}=JSON.parse(e.toString());return{data:""===t?t:JSON.parse(t),...r}}},389:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=(e,t)=>JSON.stringify({type:e,data:JSON.stringify(t)})},691:function(e,t,r){var s=this&&this.__createBinding||(Object.create?function(e,t,r,s){void 0===s&&(s=r);var a=Object.getOwnPropertyDescriptor(t,r);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,s,a)}:function(e,t,r,s){void 0===s&&(s=r),e[s]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&s(t,e,r);return a(t,e),t},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const d=o(r(352)),u=n(r(755)),i=r(275),l=n(r(408)),c=n(r(389)),f=r(385),p=r(882),m=r(800),h=new d.WebSocketServer({port:Number(i.PORT)});h.on("connection",(e=>{e.on("error",console.error),e.on("message",(t=>{try{const r=(0,u.default)(t),{type:s}=r,{userId:a}=e;switch(s){case l.default.reg:{const t=(0,p.playerAutorization)(r),s=(0,c.default)(l.default.reg,t);process.stdout.write(`Reg result: ${s}\n`),e.userId=t.index,e.send(s);const a=(0,f.updateRooms)(),o=(0,c.default)(l.default.update_room,a);process.stdout.write(`Update_room result: ${o}\n`),e.send(o);const n=(0,c.default)(l.default.update_winners,p.winners);process.stdout.write(`Update_winners result: ${n}\n`),h.clients.forEach((e=>{e.readyState===d.default.OPEN&&e.send(n)}));break}case l.default.create_room:{const e=(0,f.createRoom)(a),t=(0,c.default)(l.default.update_room,e);process.stdout.write(`Update_room result: ${t}\n`),h.clients.forEach((e=>{e.readyState===d.default.OPEN&&e.send(t)}));const r=(0,c.default)(l.default.update_winners,p.winners);process.stdout.write(`Update_winners result: ${r}\n`),h.clients.forEach((e=>{e.readyState===d.default.OPEN&&e.send(r)}));break}case l.default.add_user_to_room:{const{data:{indexRoom:t}}=r,s=(0,f.addPlayerToRoom)(t,a);if(2===s.length){const t=(0,m.createGame)();h.clients.forEach((e=>{if(e.readyState===d.default.OPEN&&(e.userId===s[0]||e.userId===s[1])){const r=(0,m.newGameUser)(t,e.userId),s=(0,c.default)(l.default.create_game,r);process.stdout.write(`Create_game result: ${s}\n`),e.send(s)}}));const r=(0,f.updateRooms)();h.clients.forEach((t=>{if(t.readyState===d.default.OPEN){const t=(0,c.default)(l.default.update_room,r);process.stdout.write(`Update_room result: ${t}\n`),e.send(t)}}))}break}case l.default.add_ships:{const{data:{gameId:t,indexPlayer:s}}=r,a=(0,m.addShipsToGame)(r);if(2===a?.init){const r=(0,m.getPlayerGameData)(t,s),{currentPlayerIndex:a}=r,o=(0,m.getPlayerGameData)(t,a),n=(0,c.default)(l.default.start_game,o);process.stdout.write(`Start_game result: ${n}\n`),e.send(n),h.clients.forEach((e=>{if(e.readyState===d.default.OPEN&&e.userId===a){const a=(0,c.default)(l.default.start_game,r);process.stdout.write(`Start_game result: ${n}\n`),e.send(a),(0,m.startGame)(t),(0,m.setTurnUserId)(t,s);const o={currentPlayer:s},d=(0,c.default)(l.default.turn,o);process.stdout.write(`Turn result: ${d}\n`),e.send(d)}}));const u={currentPlayer:s},i=(0,c.default)(l.default.turn,u);process.stdout.write(`Turn result: ${i}\n`),e.send(JSON.stringify(i))}break}case l.default.randomAttack:case l.default.attack:{const{data:{gameId:t,indexPlayer:s}}=r;if(s!==(0,m.getTurnUserId)(t))return void process.stdout.write("Should turn another player\n");const a=(0,m.doAttack)(r),o=a.resData,n=a.partnerId,u=(0,c.default)(l.default.attack,o);if(process.stdout.write(`Attack result: ${u}\n`),e.send(u),h.clients.forEach((e=>{e.readyState===d.default.OPEN&&e.userId===n&&e.send(u)})),"miss"===o.status){(0,m.setTurnUserId)(t,n);const r=(0,c.default)(l.default.turn,{currentPlayer:n});process.stdout.write(`Turn result: ${r}\n`),e.send(r),h.clients.forEach((e=>{e.readyState===d.default.OPEN&&e.userId===n&&e.send(r)}))}else if("killed"===o.status){const{aroundCells:t}=a;for(let r=0;r<t.length;r+=1){const s=t[r],a=(0,c.default)(l.default.attack,s);process.stdout.write(`Attack result: ${a}\n`),e.send(a),h.clients.forEach((e=>{e.readyState===d.default.OPEN&&e.userId===n&&e.send(a)}))}const{finish:r}=a;if(r){process.stdout.write("finsh\n"),(0,p.setWinner)(s);const t=(0,c.default)(l.default.finish,{winPlayer:s});e.send(t),h.clients.forEach((e=>{e.readyState===d.default.OPEN&&e.userId===n&&e.send(t)}));const r=(0,c.default)(l.default.update_winners,p.winners);process.stdout.write(`Update_winners result: ${r}\n`),h.clients.forEach((e=>{e.readyState===d.default.OPEN&&e.send(r)}))}}break}default:process.stdout.write("default\n")}}catch(e){process.stdout.write(`Error: ${e}\n`)}})),e.on("open",(e=>{process.stdout.write(`Open : ${e}\n`)})),e.on("close",(e=>{process.stdout.write(`Close : ${e}\n`)})),e.on("listening",(()=>{process.stdout.write(`Start ws server http server on the ${i.PORT} port!\n`)}))}))},81:e=>{e.exports=require("dotenv/config")},352:e=>{e.exports=require("ws")},147:e=>{e.exports=require("fs")},685:e=>{e.exports=require("http")},17:e=>{e.exports=require("path")}},t={};function r(s){var a=t[s];if(void 0!==a)return a.exports;var o=t[s]={exports:{}};return e[s].call(o.exports,o,o.exports,r),o.exports}(()=>{const e=r(993);r(691),console.log("Start static http server on the 8181 port!"),e.httpServer.listen(8181)})()})();